% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methodsContainer.R
\name{impute.KNN_TN,proFIAset-method}
\alias{impute.KNN_TN,proFIAset-method}
\alias{impute.KNN_TN}
\title{Fill missing values in the peak table using K-nearest Neighbour for tuncated distributions.}
\usage{
\S4method{impute.KNN_TN}{proFIAset}(object, k = 0.6, classes = c("split", "unique"))
}
\arguments{
\item{object}{A proFIAset object.}

\item{k}{The number of neighbors considered, can be a fraction then in this case the
k will be taken for each class as the frac of the effective of the class. 3 at minima because comparison
is based on correlation.}

\item{classes}{how to handle imputation for different classes, if 'split', the classes
are taken separately, if 'unique', the imputation is done on the full data matrix.}
}
\value{
A proFIAset object with the missing values imputated.
}
\description{
Impute the missing values in an FIA experiment using a Weighted
K-Nearest Neighbours on Truncated Distribution described by Jasmit S. Shah et al.
}
\examples{
if(require(plasFIA)){
    data(plasSet)

    ###Reinitializing the data matrix
    plasSet<-makeDataMatrix(plasSet,maxo=FALSE)
    plasSet<-impute.KNN_TN(plasSet,2)
}
}
\references{
Distribution based nearest neighbor imputation for truncated high dimensional data with applications to pre-clinical and
clinical metabolomics studies, J.S Shah 2017, BMC Bioinformatics.
}
